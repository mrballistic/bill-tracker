# Deploy to GitHub Pages workflow
name: Deploy to GitHub Pages

on:
  push:
    branches: ['main']
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_BASE_PATH: /bill-tracker
      NODE_OPTIONS: --max-old-space-size=4096
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Install dependencies
        run: |
          npm ci
          echo "Installed dependencies successfully"
        
      - name: Create data directory and copy data files
        run: |
          mkdir -p public/data
          if [ -f data/bills.json ]; then
            cp data/bills.json public/data/
            echo "Copied bills.json to public/data/"
          else
            echo "Warning: data/bills.json not found, creating empty data file"
            echo "[]" > public/data/bills.json
          fi
          
      - name: Build with Next.js
        run: |
          echo "Starting Next.js build process..."
          npm run build || { 
            echo "Build failed with exit code $?"
            echo "Node version: $(node --version)"
            echo "NPM version: $(npm --version)"
            echo "Checking for package conflicts..."
            npm ls || true
            exit 1
          }
        
      - name: Create .nojekyll file
        run: touch ./out/.nojekyll
        
      - name: Ensure data directory exists in output
        run: |
          mkdir -p out/data
          if [ ! -f out/data/bills.json ]; then
            echo "bills.json not found in output, copying from public/data/"
            cp public/data/bills.json out/data/ || echo "[]" > out/data/bills.json
          fi
          
      - name: Debug output directory
        run: |
          echo "Contents of out directory:"
          ls -la out/
          echo "Checking for data directory:"
          if [ -d "out/data" ]; then
            ls -la out/data
          else
            echo "Data directory not found, creating it now"
            mkdir -p out/data
          fi
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2